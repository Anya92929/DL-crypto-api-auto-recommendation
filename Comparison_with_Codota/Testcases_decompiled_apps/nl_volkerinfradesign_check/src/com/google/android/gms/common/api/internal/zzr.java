package com.google.android.gms.common.api.internal;

import com.google.android.gms.common.api.OptionalPendingResult;
import com.google.android.gms.common.api.PendingResult;
import com.google.android.gms.common.api.Result;
import com.google.android.gms.common.api.ResultCallback;
import java.util.concurrent.TimeUnit;

public final class zzr<R extends Result> extends OptionalPendingResult<R> {

    /* renamed from: a */
    private final zzb<R> f2799a;

    public zzr(PendingResult<R> pendingResult) {
        if (!(pendingResult instanceof zzb)) {
            throw new IllegalArgumentException("OptionalPendingResult can only wrap PendingResults generated by an API call.");
        }
        this.f2799a = (zzb) pendingResult;
    }

    public R await() {
        return this.f2799a.await();
    }

    public R await(long j, TimeUnit timeUnit) {
        return this.f2799a.await(j, timeUnit);
    }

    public void cancel() {
        this.f2799a.cancel();
    }

    public R get() {
        if (isDone()) {
            return await(0, TimeUnit.MILLISECONDS);
        }
        throw new IllegalStateException("Result is not available. Check that isDone() returns true before calling get().");
    }

    public boolean isCanceled() {
        return this.f2799a.isCanceled();
    }

    public boolean isDone() {
        return this.f2799a.isReady();
    }

    public void setResultCallback(ResultCallback<? super R> resultCallback) {
        this.f2799a.setResultCallback(resultCallback);
    }

    public void setResultCallback(ResultCallback<? super R> resultCallback, long j, TimeUnit timeUnit) {
        this.f2799a.setResultCallback(resultCallback, j, timeUnit);
    }

    public void zza(PendingResult.zza zza) {
        this.f2799a.zza(zza);
    }

    public Integer zzpa() {
        return this.f2799a.zzpa();
    }
}
